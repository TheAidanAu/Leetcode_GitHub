class Solution:
    def isValid(self, s: str) -> bool:
        # use a hash map to store bracket pairs
        # check each char, if it's a closing bracket
        # then you have 2 cases, either the stack is empty or not empty
        # append open bracket to the stack
        closeToOpen = {")": "(",
                       "}": "{",
                       "]": "["}
        stack = []

        for c in s:
            if c in closeToOpen:
                if stack and stack[-1] == closeToOpen[c]:
                    stack.pop()
                else:
                    return False
            else:
                stack.append(c)

        return (not stack)

# Time: O(N)
# Space: O(N)








